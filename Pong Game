#include <iostream>
#include <raylib.h>
using namespace std;

Color green = {40, 220, 50, 220};
Color blue = {40, 80, 200, 200};
Color yellow = {255, 0, 255, 255};
const int game_height = 800;
const int game_width = 1280;


int score = 0;
int ai_score = 0;

class Ball
{
    
    public:
        float x;
        float y;
        int speed_x;
        int speed_y;
        int radius;
        int life;

        Ball()
        {
            life = 0;
        }

        void Draw()
        {
            DrawCircle(x, y, radius, yellow);          //Drawing the Circle
        }

        void Movement()
        {
            x = x + speed_x;
            y = y + speed_y;
        }

        void CollisionWithEdeges()
        {
            //Checking collisions with Edeges and Making it go Opposite direction
            if( y + radius > game_height  || y - radius < 0) 
            {
                speed_y = speed_y * -1;
            }
            if(x + radius > game_width)
            {
                score++;
                speed_x = speed_x * -1;
            }
            if( x - radius < 0)
            {   
                ai_score++;
                speed_x = speed_x * -1;
            }
            
        }

        
};

class Paddle
{
    protected:
        void Limit()
        {
            if(y <= 0)
            {
                y = 0;
            }
            if( y + height >= game_height)
            {
                y = game_height - height;
            }
        }
    
    public:
        float x;
        float y;
        int height;
        int width;
        int speed;


        void Draw()
        {
            DrawRectangle(x, y, width, height, green);   
        }

        void Movement()
        {
            if(IsKeyPressed(KEY_UP) && y > 0)
            {
                y = y - speed;
            }
            if(IsKeyPressed(KEY_DOWN) && y + height < game_height)
            {
                y = y + speed;
            }
        }

};

class AI_Paddle: public Paddle
{
    public:
        //Overriding Movement function
        void Movement(int ball_y)
        {   
            if(y + height/2 > ball_y)
            {
                y = y - speed;
            }
            if( y + height/2 <= ball_y)
            {
                y = y + speed;
            } 
            
            Limit();   
                
        }
        
};


class Game
{
    public:
        Ball ball;
        Paddle paddle;
        AI_Paddle aipaddle;



        void Draw()
        {
            ball.Draw();
            paddle.Draw();
            aipaddle.Draw();

        }

        void Movement()
        {
            ball.Movement();
            paddle.Movement();
            aipaddle.Movement(ball.y);
            ball.CollisionWithEdeges();

        }


};

int main () {
    
    Game game;

    //for Ball
    game.ball.x = game_width/2;
    game.ball.y = game_height/2;
    game.ball.radius = 18;
    game.ball.speed_x = 7;
    game.ball.speed_y = 5;

    //for Paddle
    game.paddle.width = 30;
    game.paddle.height = 120;
    game.paddle.speed = 50;
    game.paddle.x = 10;
    game.paddle.y = game_height/2 - game.paddle.height/2;

    //for AI paddle
    game.aipaddle.width = 30;
    game.aipaddle.height = 120;
    game.aipaddle.x = game_width - game.aipaddle.width - 10;
    game.aipaddle.y = game_height/2 - game.aipaddle.height/2;
    game.aipaddle.speed = 10;
    

    //Game window/screen
    InitWindow(game_width, game_height, "Pong Game");
    //Setting the Speed
    SetTargetFPS(60);
    
    //Game loop
    while(WindowShouldClose() == false)
    {

        //Movement
        game.Movement();
        
        if(CheckCollisionCircleRec(Vector2{game.ball.x, game.ball.y}, game.ball.radius, Rectangle{game.paddle.x, game.paddle.y, (float) game.paddle.width, (float) game.paddle.height}))
        {
            game.ball.speed_x = game.ball.speed_x * -1;
        }
        if(CheckCollisionCircleRec(Vector2{game.ball.x, game.ball.y}, game.ball.radius, Rectangle{game.aipaddle.x, game.aipaddle.y, (float) game.aipaddle.width, (float) game.aipaddle.height}))
        {
            game.ball.speed_x = game.ball.speed_x * -1;
        }

        //Drawing
        ClearBackground(blue);  //clearing BG before drawing 
        
        BeginDrawing();
        DrawText("Pong Game", 20, 20, 50, green);   //Title
        DrawText(TextFormat("Score: %i", score), 400 , 20 , 40, green);  //Score
        DrawText(TextFormat("AI Score: %i", ai_score ), 740 , 20 , 40, green);  //Score
        DrawLine(game_width/2, 0, game_width/2, game_height, WHITE); //Drawing the line 
        DrawCircle(680, 400, 25, green);
        game.Draw();

        
        EndDrawing();
    }

    
    CloseWindow(); //Closing the window/screen
    return 0;
}
